{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This master template create a VPC, ECS cluster and Spotinst Elastigroup for ECS nodes",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Availability Zone Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "NumberOfAZs"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PublicSubnet3CIDR",
                        "PublicSubnet4CIDR",
                        "CreatePrivateSubnets",
                        "PrivateSubnet1ACIDR",
                        "PrivateSubnet2ACIDR",
                        "PrivateSubnet3ACIDR",
                        "PrivateSubnet4ACIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "BastionAMIOS",
                        "BastionInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "ECS Configuration"
                    },
                    "Parameters": [
                        "NewECS",
                        "ECSName"
                    ]
                },
                {
                    "Label": {
                        "default": "Spotinst Configuraiton"
                    },
                    "Parameters": [
                        "AccountID",
                        "AccessToken"
                    ]
                },
                {
                    "Label": {
                        "default": "Elastigroup Configuration"
                    },
                    "Parameters": [
                        "ElastigroupName",
                        "ClusterOrientation",
                        "SpotPercentage",
                        "CapacityTarget",
                        "CapacityMin",
                        "CapacityMax",
                        "OnDemandInstanceType",
                        "SpotInstancesType",
                        "AvailabilityZones",
                        "DetailedMonitoring",
                        "ProductType"
                    ]
                },
                {
                    "Label": {
                        "default": "ECS AutoScaler Configuration"
                    },
                    "Parameters": [
                        "AutoScaleraEnable",
                        "AutoScalerCooldown",
                        "AutoScalerEvaluationPeriods",
                        "AutoScalerHeadroomUnitCount",
                        "AutoScalerHeadroomCPU",
                        "AutoScalerHeadroomRAM"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "CreatePrivateSubnets": {
                    "default": "Create private subnets"
                },
                "BastionAMIOS": {
                    "default": "Bastion AMI Operating System"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "PrivateSubnet1ACIDR": {
                    "default": "Private subnet 1A CIDR"
                },
                "PrivateSubnet2ACIDR": {
                    "default": "Private subnet 2A CIDR"
                },
                "PrivateSubnet3ACIDR": {
                    "default": "Private subnet 3A CIDR"
                },
                "PrivateSubnet4ACIDR": {
                    "default": "Private subnet 4A CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public subnet 2 CIDR"
                },
                "PublicSubnet3CIDR": {
                    "default": "Public subnet 3 CIDR"
                },
                "PublicSubnet4CIDR": {
                    "default": "Public subnet 4 CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "S3BucketName": {
                    "default": "S3 Bucket Name"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed Bastion External Access CIDR"
                },
                "ElastigroupName": {
                    "default": "Elastigroup Name"
                },
                "AccessToken": {
                    "default": "Spotint Access Token"
                },
                "AccountID": {
                    "default": "Spotinst Account ID"
                },
                "ClusterOrientation": {
                    "default": "Cluster Orientation"
                },
                "SpotPercentage": {
                    "default": "Spot Instaces Percantage"
                },
                "CapacityTarget": {
                    "default": "Instacnes Capacity Target"
                },
                "CapacityMin": {
                    "default": "Instacnes Capacity Minimum"
                },
                "CapacityMax": {
                    "default": "Instacnes Capacity Maximum"
                },
                "OnDemandInstanceType": {
                    "default": "On-Demand Instace Type"
                },
                "SpotInstancesType": {
                    "default": "Spot Instances Type"
                },
                "DetailedMonitoring": {
                    "default": "Detailed Monitoring"
                },
                "ProductType": {
                    "default": "Product Type"
                },
                "ECSName": {
                    "default": "ECS Name"
                },
                "AutoScaleraEnable": {
                    "default": "Enable ECS AutoScaler?"
                },
                "AutoScalerCooldown": {
                    "default": "AutoScaler Cooldown"
                },
                "AutoScalerEvaluationPeriods": {
                    "default": "AutoScaler Evaluation Periods"
                },
                "AutoScalerHeadroomUnitCount": {
                    "default": "AutoScaler Headroom Units Count"
                },
                "AutoScalerHeadroomCPU": {
                    "default": "AutoScaler Headroom CPU"
                },
                "AutoScalerHeadroomRAM": {
                    "default": "AutoScaler Headroom RAM"
                },
                "NewECS": {
                    "default": "New or Existing ECS Cluster?"
                }
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Only two Availability Zones are used for this deployment, and the logical order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "CreatePrivateSubnets": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Set to false to create only public subnets. If false, the CIDR parameters for ALL private subnets will be ignored.",
            "Type": "String"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-14.04-LTS-HVM",
                "Ubuntu-Server-16.04-LTS-HVM"
            ],
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances",
            "Type": "String"
        },
        "BastionInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the bastion instances",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumberOfAZs": {
            "AllowedValues": [
                "2",
                "3",
                "4"
            ],
            "Default": "2",
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "String"
        },
        "PrivateSubnet1ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1A located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet2ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2A located in Availability Zone 2",
            "Type": "String"
        },
        "PrivateSubnet3ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.64.0/19",
            "Description": "CIDR block for private subnet 3A located in Availability Zone 3",
            "Type": "String"
        },
        "PrivateSubnet4ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.96.0/19",
            "Description": "CIDR block for private subnet 4A located in Availability Zone 4",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet3CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.160.0/20",
            "Description": "CIDR block for the public DMZ subnet 3 located in Availability Zone 3",
            "Type": "String"
        },
        "PublicSubnet4CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.176.0/20",
            "Description": "CIDR block for the public DMZ subnet 4 located in Availability Zone 4",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-examples/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the bastions. We recommend that you set this value to a trusted IP range.",
            "Type": "String"
        },
        "S3BucketName": {
            "AllowedPattern": "^[a-z0-9][a-z0-9-.]*$",
            "Default": "type-unique-value-here-in-lowercase",
            "Description": "Name of the S3 bucket that will be created for your workload to store data. Enter a unique name that does not include uppercase characters.",
            "Type": "String"
        },
        "ElastigroupName": {
            "Type": "String",
            "Description": "Provide a Name for the Elastigroup"
        },
        "AccessToken": {
            "Type": "String",
            "Description": "Provide Spotinst API Token"
        },
        "AccountID": {
            "Type": "String",
            "Description": "Provide Spotinst Account ID"
        },
        "ClusterOrientation": {
            "Type": "String",
            "AllowedValues": [
                "balanced",
                "availabilityOriented",
                "costOriented"
            ],
            "Default": "balanced",
            "Description": "Specify Cluster Orientation"
        },
        "SpotPercentage": {
            "Type": "Number",
            "MinValue": "0",
            "MaxValue": "100",
            "Default": "100",
            "Description": "Spot Instances Percantage in the Cluster",
            "ConstraintDescription": "Select a Number Between 0 and 100"
        },
        "CapacityTarget": {
            "Type": "Number",
            "Description": "Desired Amount of Intances in the Cluster"
        },
        "CapacityMin": {
            "Type": "Number",
            "Description": "Minimal Amount of Intances in the Cluster"
        },
        "CapacityMax": {
            "Type": "Number",
            "Description": "Maximal Amount of Intances in the Cluster"
        },
        "OnDemandInstanceType": {
            "Type": "String",
            "Default": "c4.large",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type",
            "Description": "Which on-demand instance type should we use to base Elastigroup upon?"
        },
        "SpotInstancesType": {
            "Type": "CommaDelimitedList",
            "Default": "c4.large,c5.large",
            "Description": "Provide comma seperated List of Spot Instances Available to Elasticgroup"
        },
        "DetailedMonitoring": {
            "Type": "String",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Allow Detailed CloudWatch Monitoring?"
        },
        "ProductType": {
            "Type": "String",
            "AllowedValues": [
                "Linux/UNIX",
                "SUSE Linux",
                "Windows"
            ],
            "Default": "Linux/UNIX",
            "Description": "Choose OS Type"
        },
        "ECSName": {
            "Description": "Provide a name for the ECS Cluster (Or the existing ECS Cluster Name)",
            "Type": "String"
        },
        "AutoScaleraEnable": {
            "Description": "Would you like to Enable Spotinst's ECS AutoScaler?",
            "Type": "String",
            "Default": "true",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "AutoScalerCooldown": {
            "Description": "Provide the time in seconds, between scaling activities (Ignore if not using AutoScaler)",
            "Type": "String",
            "Default": "180"
        },
        "AutoScalerEvaluationPeriods": {
            "Description": "Provide the number of consecutive periods that should pass before scaling down (Ignore if not using AutoScaler)",
            "Type": "String",
            "Default": "3"
        },
        "AutoScalerHeadroomUnitCount": {
            "Description": "Provide the number of Headroom units to keep available at all times (Ignore if not using AutoScaler)",
            "Type": "String",
            "Default": "0"
        },
        "AutoScalerHeadroomCPU": {
            "Description": "Provide the amount of CPU units reserved in each Headroom unit (Ignore if not using AutoScaler)",
            "Type": "String",
            "Default": "0"
        },
        "AutoScalerHeadroomRAM": {
            "Description": "Provide the amount in memory (in MB) reserved in each Headroom unit (Ignore if not using AutoScaler)",
            "Type": "String",
            "Default": "0"
        },
        "NewECS": {
            "Description": "Would you like to use an existing ECS Cluster, or creatae a new one?",
            "Type": "String",
            "AllowedValues": [
                "New Cluster",
                "Existing Cluster"
            ],
            "Default": "New Cluster"
        }
    },
    "Conditions": {
        "2AZs": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "2"
            ]
        },
        "3AZs": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "3"
            ]
        },
        "4AZs": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "4"
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "CreatePrivateSubnets": {
                        "Ref": "CreatePrivateSubnets"
                    },
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1ACIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2ACIDR"
                    },
                    "PrivateSubnet3ACIDR": {
                        "Ref": "PrivateSubnet3ACIDR"
                    },
                    "PrivateSubnet4ACIDR": {
                        "Ref": "PrivateSubnet4ACIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PublicSubnet3CIDR": {
                        "Ref": "PublicSubnet3CIDR"
                    },
                    "PublicSubnet4CIDR": {
                        "Ref": "PublicSubnet4CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                },
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-linux-bastion/"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "ECSInstancesSG": {
            "DependsOn": "BastionStack",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ecs-Spotinst-instances-sg"
                    }
                ],
                "GroupDescription": "SG for ECS container instances (also permits SSH access from the bastion host)",
                "VpcId": {
                    "Fn::GetAtt": [
                        "VPCStack",
                        "Outputs.VPCID"
                    ]
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ECSStack": {
            "DependsOn": "ECSInstancesSG",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/Elastigroup-ECS.template"
                },
                "Parameters": {
                    "NewECS": {
                        "Ref": "NewECS"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "ECSName": {
                        "Ref": "ECSName"
                    },
                    "AccessToken": {
                        "Ref": "AccessToken"
                    },
                    "AccountID": {
                        "Ref": "AccountID"
                    },
                    "ElastigroupName": {
                        "Ref": "ElastigroupName"
                    },
                    "SpotPercentage": {
                        "Ref": "SpotPercentage"
                    },
                    "ClusterOrientation": {
                        "Ref": "ClusterOrientation"
                    },
                    "CapacityTarget": {
                        "Ref": "CapacityTarget"
                    },
                    "CapacityMin": {
                        "Ref": "CapacityMin"
                    },
                    "CapacityMax": {
                        "Ref": "CapacityMax"
                    },
                    "OnDemandInstanceType": {
                        "Ref": "OnDemandInstanceType"
                    },
                    "SpotInstancesType": {
                        "Fn::Join" : [
                        ",", 
                        {
                            "Ref": "SpotInstancesType"
                        }
                        ] 
                    },
                    "VPC": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "SubnetIds": {
                         "Fn::Join": [
                            ",",
                            [
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet1ID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet2ID"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "3AZs",
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet3ID"
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "4AZs",
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet4ID"
                                            ]
                                        },
                                        {
                                            "Ref": "AWS::NoValue"
                                        }
                                    ]
                                }
                            ]   
                        ]
                    },
                    "DetailedMonitoring": {
                        "Ref": "DetailedMonitoring"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "SecurityGroupsIds": {
                        "Ref": "ECSInstancesSG"
                    },
                    "ProductType": {
                        "Ref": "ProductType"
                    },
                    "AutoScaleraEnable": {
                        "Ref": "AutoScaleraEnable"
                    },
                    "AutoScalerCooldown": {
                        "Ref": "AutoScalerCooldown"
                    },
                    "AutoScalerEvaluationPeriods": {
                        "Ref": "AutoScalerEvaluationPeriods"
                    },
                    "AutoScalerHeadroomCPU": {
                        "Ref": "AutoScalerHeadroomCPU"
                    },
                    "AutoScalerHeadroomRAM": {
                        "Ref": "AutoScalerHeadroomRAM"
                    },
                    "AutoScalerHeadroomUnitCount": {
                        "Ref": "AutoScalerHeadroomUnitCount"
                    }
                }
            }
        }
    }
}