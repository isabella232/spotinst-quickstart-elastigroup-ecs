{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ECS cluster and Spotinst Elastigroup for the ECS nodes (qs-1osj6tpba) License: Apache 2.0 (Please do not remove) Oct,3,201",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Amazon ECS configuration"
                    },
                    "Parameters": [
                        "NewECS",
                        "ECSName"
                    ]
                },
                {
                    "Label": {
                        "default": "Spotinst configuration"
                    },
                    "Parameters": [
                        "AccountID",
                        "AccessToken"
                    ]
                },
                {
                    "Label": {
                        "default": "Elastigroup configuration"
                    },
                    "Parameters": [
                        "ElastigroupName",
                        "ClusterOrientation",
                        "SpotPercentage",
                        "CapacityTarget",
                        "CapacityMin",
                        "CapacityMax",
                        "VPC",
                        "OnDemandInstanceType",
                        "SpotInstancesType",
                        "AvailabilityZones",
                        "SubnetIds",
                        "DetailedMonitoring",
                        "KeyName",
                        "SecurityGroupsIds",
                        "ProductType"
                    ]
                },
                {
                    "Label": {
                        "default": "ECS autoscaler configuration"
                    },
                    "Parameters": [
                        "AutoScalerEnable",
                        "AutoScalerCooldown",
                        "AutoScalerEvaluationPeriods",
                        "AutoScalerHeadroomUnitCount",
                        "AutoScalerHeadroomCPU",
                        "AutoScalerHeadroomRAM"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "ElastigroupName": {
                    "default": "Elastigroup name"
                },
                "AccessToken": {
                    "default": "Spotinst Access Token"
                },
                "AccountID": {
                    "default": "Spotinst Account ID"
                },
                "ClusterOrientation": {
                    "default": "Cluster orientation"
                },
                "SpotPercentage": {
                    "default": "Spot Instances percentage"
                },
                "CapacityTarget": {
                    "default": "Instances capacity target"
                },
                "CapacityMin": {
                    "default": "Instances capacity minimum"
                },
                "CapacityMax": {
                    "default": "Instances capacity maximum"
                },
                "VPC": {
                    "default": "VPC"
                },
                "OnDemandInstanceType": {
                    "default": "On-Demand Instance type"
                },
                "SpotInstancesType": {
                    "default": "Spot Instances type"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "SubnetIds": {
                    "default": "Subnet IDs"
                },
                "DetailedMonitoring": {
                    "default": "Detailed monitoring"
                },
                "KeyName": {
                    "default": "Key pair name"
                },
                "SecurityGroupsIds": {
                    "default": "Security group IDs"
                },
                "ProductType": {
                    "default": "Product type"
                },
                "ECSName": {
                    "default": "ECS name"
                },
                "AutoScalerEnable": {
                    "default": "Turn on ECS autoscaler"
                },
                "AutoScalerCooldown": {
                    "default": "Autoscaler cooldown"
                },
                "AutoScalerEvaluationPeriods": {
                    "default": "Autoscaler evaluation periods"
                },
                "AutoScalerHeadroomUnitCount": {
                    "default": "Autoscaler Headroom units count"
                },
                "AutoScalerHeadroomCPU": {
                    "default": "AutoScaler Headroom CPU"
                },
                "AutoScalerHeadroomRAM": {
                    "default": "AutoScaler Headroom RAM"
                },
                "NewECS": {
                    "default": "New or existing ECS cluster"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 bucket name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 key prefix"
                }
            }
        }
    },
    "Parameters": {
        "ElastigroupName": {
            "Type": "String",
            "Description": "Name of the Elastigroup."
        },
        "AccessToken": {
            "Type": "String",
            "Description": "Spotinst API Token."
        },
        "AccountID": {
            "Type": "String",
            "Description": "Spotinst Account ID."
        },
        "ClusterOrientation": {
            "Type": "String",
            "AllowedValues": [
                "balanced",
                "availabilityOriented",
                "costOriented"
            ],
            "Default": "balanced",
            "Description": "The cluster orientation."
        },
        "SpotPercentage": {
            "Type": "Number",
            "MinValue": "0",
            "MaxValue": "100",
            "Default": "100",
            "Description": "The percentage of Spot Instances in the cluster.",
            "ConstraintDescription": "Select a Number Between 0 and 100"
        },
        "CapacityTarget": {
            "Type": "Number",
            "Description": "The desired number of instances in the cluster."
        },
        "CapacityMin": {
            "Type": "Number",
            "Description": "The minimum number of instances in the cluster."
        },
        "CapacityMax": {
            "Type": "Number",
            "Description": "The maximum number of instances in the cluster."
        },
        "OnDemandInstanceType": {
            "Type": "String",
            "Default": "c4.large",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type",
            "Description": "The On-Demand Instance type to fall back to."
        },
        "SpotInstancesType": {
            "Type": "CommaDelimitedList",
            "Default": "c4.large,c5.large",
            "Description": "A comma-separated list of Spot Instances that are available to the Elastigroup."
        },
        "VPC": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "The VPC for the Elastigroup."
        },
        "AvailabilityZones": {
            "Type": "List<AWS::EC2::AvailabilityZone::Name>",
            "Description": "The Availability Zones for the cluster."
        },
        "SubnetIds": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "The subnet IDs for the cluster (must be from the selected VPC)."
        },
        "DetailedMonitoring": {
            "Type": "String",
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Choose False to disable detailed CloudWatch monitoring."
        },
        "KeyName": {
            "Description": "Provide an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "SecurityGroupsIds": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "A comma-separated list of security group IDs."
        },
        "ProductType": {
            "Type": "String",
            "AllowedValues": [
                "Linux/UNIX",
                "SUSE Linux",
                "Windows"
            ],
            "Default": "Linux/UNIX",
            "Description": "The operating system for the instances."
        },
        "ECSName": {
            "Description": "A name for the Amazon ECS cluster.",
            "Type": "String"
        },
        "AutoScalerEnable": {
            "Description": "Choose False to disable the Spotinst autoscaler.",
            "Type": "String",
            "Default": "true",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "AutoScalerCooldown": {
            "Description": "The time, in seconds, between scaling activities (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "180"
        },
        "AutoScalerEvaluationPeriods": {
            "Description": "The number of consecutive periods that should pass before scaling down (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "3"
        },
        "AutoScalerHeadroomUnitCount": {
            "Description": "The number of Headroom units to keep available at all times (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "0"
        },
        "AutoScalerHeadroomCPU": {
            "Description": "The amount of CPU units reserved in each Headroom unit (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "0"
        },
        "AutoScalerHeadroomRAM": {
            "Description": "The amount in memory (in MB) reserved in each Headroom unit (ignore if not using the autoscaler).",
            "Type": "String",
            "Default": "0"
        },
        "NewECS": {
            "Description": "Use an existing Amazon ECS cluster or create a new one.",
            "Type": "String",
            "AllowedValues": [
                "New Cluster",
                "Existing Cluster"
            ],
            "Default": "New Cluster"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-spotinst-ecs/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSRegionToAMI": {
            "AMI": {
                "AMZECSOTP": "amzn-ami-2018.03.a-amazon-ecs-optimized"
            },
            "us-east-2": {
                "AMI": "ami-0307f7ccf6ea35750"
            },
            "us-east-1": {
                "AMI": "ami-045f1b3f87ed83659"
            },
            "us-west-2": {
                "AMI": "ami-01b70aea4161476b7"
            },
            "us-west-1": {
                "AMI": "ami-0285183bbef6224bd"
            },
            "eu-west-3": {
                "AMI": "ami-0f4738fbeb53e6c3a"
            },
            "eu-west-2": {
                "AMI": "ami-01bee3897bba49d78"
            },
            "eu-west-1": {
                "AMI": "ami-0627e141ce928067c"
            },
            "eu-central-1": {
                "AMI": "ami-0eaa3baf6969912ba"
            },
            "eu-north-1": {
                "AMI": "ami-03494b0c9e1c22492"
            },
            "ap-northeast-2": {
                "AMI": "ami-00294948a592fc052"
            },
            "ap-northeast-1": {
                "AMI": "ami-05b296a384694dfa4"
            },
            "ap-southeast-2": {
                "AMI": "ami-02c73ee1100ce3e7a"
            },
            "ap-southeast-1": {
                "AMI": "ami-050865a806e0dae53"
            },
            "ca-central-1": {
                "AMI": "ami-0f552e0a86f08b660"
            },
            "ap-south-1": {
                "AMI": "ami-01ef9f6a829ae3956"
            },
            "sa-east-1": {
                "AMI": "ami-084b1eee100c102ee"
            }
        }
    },
    "Conditions": {
        "CreateECSCluster": {
            "Fn::Equals": [
                {
                    "Ref": "NewECS"
                },
                "New Cluster"
            ]
        }
    },
    "Resources": {
        "LambdaStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/copy_lambda.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    }
                }
            }
        },
        "ECSCluster": {
            "Condition": "CreateECSCluster",
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Ref": "ECSName"
                }
            }
        },
        "SpotinstElastigroup": {
            "DependsOn": "LambdaStack",
            "Type": "Custom::elasticgroup",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "LambdaStack",
                        "Outputs.SpotinstLambda"
                    ]
                },
                "accessToken": {
                    "Ref": "AccessToken"
                },
                "accountId": {
                    "Ref": "AccountID"
                },
                "group": {
                    "name": {
                        "Ref": "ElastigroupName"
                    },
                    "region": {
                        "Ref": "AWS::Region"
                    },
                    "strategy": {
                        "risk": {
                            "Ref": "SpotPercentage"
                        },
                        "availabilityVsCost": {
                            "Ref": "ClusterOrientation"
                        }
                    },
                    "capacity": {
                        "target": {
                            "Ref": "CapacityTarget"
                        },
                        "minimum": {
                            "Ref": "CapacityMin"
                        },
                        "maximum": {
                            "Ref": "CapacityMax"
                        }
                    },
                    "scaling": {},
                    "compute": {
                        "instanceTypes": {
                            "ondemand": {
                                "Ref": "OnDemandInstanceType"
                            },
                            "spot": {
                                "Ref": "SpotInstancesType"
                            }
                        },
                        "subnetIds": {
                            "Ref": "SubnetIds"
                        },
                        "launchSpecification": {
                            "tags": [
                                {
                                    "tagKey": "Name",
                                    "tagValue": {
                                        "Fn::Sub": "${ECSName}-ECS-Host"
                                    }
                                }
                            ],
                            "monitoring": {
                                "Ref": "DetailedMonitoring"
                            },
                            "imageId": {
                                "Fn::FindInMap": [
                                    "AWSRegionToAMI",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "AMI"
                                ]
                            },
                            "keyPair": {
                                "Ref": "KeyName"
                            },
                            "securityGroupIds": {
                                "Ref": "SecurityGroupsIds"
                            },
                            "iamRole": {
                                "arn": {
                                    "Fn::GetAtt": [
                                        "ECSInstanceProfile",
                                        "Arn"
                                    ]
                                }
                            },
                            "userData": {
                                "Fn::Base64": {
                                    "Fn::Sub": [
                                        "#!/bin/bash\necho ECS_CLUSTER=${ECSClustername} >> /etc/ecs/ecs.config",
                                        {
                                            "ECSClustername": {
                                                "Ref": "ECSName"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        "product": {
                            "Ref": "ProductType"
                        }
                    },
                    "scheduling": {},
                    "thirdPartiesIntegration": {
                        "ecs": {
                            "clusterName": {
                                "Ref": "ECSName"
                            },
                            "autoScale": {
                                "isEnabled": {
                                    "Ref": "AutoScalerEnable"
                                },
                                "cooldown": {
                                    "Ref": "AutoScalerCooldown"
                                },
                                "down": {
                                    "evaluationPeriods": {
                                        "Ref": "AutoScalerEvaluationPeriods"
                                    }
                                },
                                "headroom": {
                                    "cpuPerUnit": {
                                        "Ref": "AutoScalerHeadroomCPU"
                                    },
                                    "memoryPerUnit": {
                                        "Ref": "AutoScalerHeadroomRAM"
                                    },
                                    "numOfUnits": {
                                        "Ref": "AutoScalerHeadroomUnitCount"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "ECSRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "RoleName": {
                    "Fn::Sub": "${ECSName}-ECSRole-${AWS::Region}"
                },
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:BatchGetImage",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:GetAuthorizationToken",
                                        "ssm:DescribeAssociation",
                                        "ssm:GetDeployablePatchSnapshotForInstance",
                                        "ssm:GetDocument",
                                        "ssm:GetManifest",
                                        "ssm:GetParameters",
                                        "ssm:ListAssociations",
                                        "ssm:ListInstanceAssociations",
                                        "ssm:PutInventory",
                                        "ssm:PutComplianceItems",
                                        "ssm:PutConfigurePackageResult",
                                        "ssm:UpdateAssociationStatus",
                                        "ssm:UpdateInstanceAssociationStatus",
                                        "ssm:UpdateInstanceInformation",
                                        "ec2messages:AcknowledgeMessage",
                                        "ec2messages:DeleteMessage",
                                        "ec2messages:FailMessage",
                                        "ec2messages:GetEndpoint",
                                        "ec2messages:GetMessages",
                                        "ec2messages:SendReply",
                                        "cloudwatch:PutMetricData",
                                        "ec2:DescribeInstanceStatus",
                                        "ds:CreateComputer",
                                        "ds:DescribeDirectories",
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogGroups",
                                        "logs:DescribeLogStreams",
                                        "logs:PutLogEvents",
                                        "s3:PutObject",
                                        "s3:GetObject",
                                        "s3:AbortMultipartUpload",
                                        "s3:ListMultipartUploadParts",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ECSInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ECSRole"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Cluster": {
            "Description": "A reference to the ECS cluster",
            "Value": {
                "Ref": "ECSName"
            }
        }
    }
}